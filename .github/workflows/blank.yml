name: ci/cd

on:
  push:
    branches:
      - master

jobs:
  producer:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: kafka-producer
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ secrets.JAVA_VERSION }}
          architecture: x64
      - name: GRADLE PREPARATION
        run: chmod +x gradlew
      - name: PRODUCER COMPILATION
        run: ./gradlew compileKotlin -x compileJava --parallel
      - name: PRODUCER TESTS
        run: ./gradlew test -x compileTestJava --parallel
      - name: PRODUCER BUILD
        run: ./gradlew build -x test -x compileJava --parallel
      - name: PRODUCER DOCKER DELIVERY
        if: github.ref == 'refs/heads/master'
        run: ./gradlew jib
  consumer:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: kafka-consumer
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ secrets.JAVA_VERSION }}
          architecture: x64
      - name: GRADLE PREPARATION
        run: chmod +x gradlew
      - name: CONSUMER COMPILATION
        run: ./gradlew compileKotlin -x compileJava --parallel
      - name: CONSUMER TESTS
        run: ./gradlew test -x compileTestJava --parallel
      - name: CONSUMER BUILD
        run: ./gradlew build -x test -x compileJava --parallel
      - name: CONSUMER DOCKER DELIVERY
        if: github.ref == 'refs/heads/master'
        run: ./gradlew jib
  gateway:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: gateway
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ secrets.JAVA_VERSION }}
          architecture: x64
      - name: GRADLE PREPARATION
        run: chmod +x gradlew
      - name: GATEWAY COMPILATION
        run: ./gradlew compileKotlin -x compileJava --parallel
      - name: GATEWAY TESTS
        run: ./gradlew test -x compileTestJava --parallel
      - name: GATEWAY BUILD
        run: ./gradlew build -x test -x compileJava --parallel
      - name: GATEWAY DOCKER DELIVERY
        if: github.ref == 'refs/heads/master'
        run: ./gradlew jib -Djib.to.image=${{ secrets.DOCKER_HUB_REGISTRY }}/${{ secrets.DOCKER_HUB_USER }}/gateway:latest -Djib.to.auth.username=${{ secrets.DOCKER_HUB_USER }} -Djib.to.auth.password=${{ secrets.DOCKER_HUB_PASSWORD }}
  frontent:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: notification-app
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ secrets.NODE_VERSION }}
      - name: NPM INSTALLATION
        run: npm install --only=prod --silent
      - name: NPM BUILDING
        run: npm run build
      - name: FRONTEND DOCKER IMAGE DELIVERY
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: integr8ed/inad-client
          tags: 1.0.0, latest