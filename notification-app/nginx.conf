worker_processes auto;
error_log stderr;

# worker configurations
events {
    worker_connections  2048;
    multi_accept on;
}

http {
    include      /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';

    sendfile             on;
    gzip                 on;
    gzip_http_version    1.1;
    gzip_disable         "MSIE [1-6]\.";
    gzip_min_length      256;
    gzip_vary            on;
    gzip_proxied         expired no-cache no-store private auth;
    gzip_types           text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level      9;
    gzip_static          on;
    tcp_nopush           on;
    tcp_nodelay          on;
    keepalive_timeout    65;
    keepalive_requests   100;
    types_hash_max_size  2048;
    client_max_body_size 2m;

    server {
        listen 80;
        access_log /var/log/nginx/access.log compression;
        error_log  /var/log/nginx/error.log;

        # root location
        root /usr/share/nginx/html;

        # server index file
        index index.html index.htm;

        location /api/notifications {
            proxy_pass http://gateway:8082/api/notifications;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # Media: images
        location ~* \.(?:jpg|jpeg|png)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. /somefile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
}
