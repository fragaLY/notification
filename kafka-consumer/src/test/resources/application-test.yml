# spring specific properties
spring:
  main:
    lazy-initialization: false
    web-application-type: servlet
    banner-mode: off
  lifecycle:
    timeout-per-shutdown-phase: 60s
  jackson:
    time-zone: UTC
    locale: en_US
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        default_schema: notification
    show-sql: true
  datasource:
    driverClassName: org.h2.Driver
    url: "jdbc:h2:mem:notification;\
          MODE=PostgreSQL;\
          DATABASE_TO_UPPER=false;\
          DB_CLOSE_DELAY=-1;\
          DB_CLOSE_ON_EXIT=FALSE"
    username: sa
    password:
  flyway:
    enabled: true
    locations: classpath:db/migration
    schemas: notification
    url: jdbc:h2:mem:notification
    user: sa
    password:
  kafka:
    consumer:
      bootstrap-servers: ${spring.embedded.kafka.brokers}
      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: notification-events-listener-group
    producer:
      bootstrap-servers: ${spring.embedded.kafka.brokers}
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    template:
      default-topic: notification-event

# server specific properties
server:
  port: 8081
  shutdown: immediate
  servlet:
    session:
      timeout: 60m
      cookie:
        http-only: true
    application-display-name: kafka-consumer
  compression:
    enabled: true
    min-response-size: 2KB # default value
    mime-types: "text/html, text/xml, text/plain, text/css, text/javascript, application/javascript, application/json, application/xml, image/jpeg, image/png, application/octet-stream"
  error:
    whitelabel:
      enabled: false

# log specific properties
logging:
  level:
    root: debug
    org:
      springframework:
        boot: debug
        kafka: debug
